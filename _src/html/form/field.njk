{% import '_macros/macros.njk' as macro %}

{# Config #}
{% set type = field.type|default('text') %}
{% set id = field.id|default(null) %}
{% set name = field.name|default(field.id) %}
{% set required = field.required|default(true) %}
{% set hiddenLabel = field.hiddenLabel|default(false) %}
{% set classes = field.classes|default(null) %}

{# Content #}
{% set placeholder = field.placeholder|default(null) %}
{% set label = field.label|default(null) %}
{% set instructions = field.instructions|default(null) %}
{% set value = field.value|default(null) %}
{% set autocomplete = field.autocomplete|default('on') %}

{# Core input field types #}
{% set baseInputFields = [
    'text',
    'email',
    'search',
    'number',
    'password',
    'tel'
] %}

{# Option field types #}
{% set optionInputFields = [
    'checkbox',
    'radio'
] %}

{# Option groups #}
{% set optionGroupFields = [
    'radio_group',
    'checkbox_group'
] %}

{% if type in optionGroupFields %}
    {% set fieldTag = 'fieldset' %}
{% else %}
    {% set fieldTag = 'div' %}
{% endif %}

<{{ fieldTag }} class="field">

    {# Show a legend for option groups, no label for single options and a label for the rest #}
    {% if type in optionGroupFields %}
        <legend class="field__label" for="{{ id }}">{{ label|safe }}{{ macro.required(required) }}</legend>
    {% elseif type == 'submit' or type in optionInputFields %}
        {# The label is associated inside the field #}
    {% else %}
        <label class="{% if hiddenLabel %}sr-only m-0{% else %}field__label{% endif %}" for="{{ id }}">{{ label|safe }}{{ macro.required(required) }}</label>
    {% endif %}

    {# Instructions #}
    {% if instructions %}
        <p class="field__instructions">{{ instructions }}</p>
    {% endif %}

    {# Get field #}
    {% if type in baseInputFields %}
        {% include 'form/fields/input.njk' %}
    {% elseif type in optionInputFields %}
        {% include 'form/fields/option.njk' %}
    {% else %}
        {% include 'form/fields/' ~ type ~ '.njk' %}
    {% endif %}

    {# Errors #}
    {% if field.renderErrors|length > 0 %}
        <p class="field__error">{{ field.renderErrors }}</p>
    {% endif %}
</{{ fieldTag }}>