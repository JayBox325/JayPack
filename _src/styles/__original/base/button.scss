.btn {
    $b: &;

    min-height: 40px;
	text-decoration: none;
    padding: ($gutter * .5) $gutter;
    line-height: 1.3;
	display: inline-flex;
    align-items: center;
    text-align: center;
    justify-content: center;
    cursor: pointer;
    transition: background .2s ease-in-out;
    vertical-align: middle;
    @include resp-font-size(16, 16, 16, 18);

    @include media-breakpoint-only(xs) {
        display: flex;
        width: 100%;

		+ #{$b} {
			margin-top: $gutter;
		}
    }

    @include media-breakpoint-up(sm) {
        margin-right: $gutter;

        &:last-child {
            margin-right: 0;
        }
    }

    &--icon {
        text-align: left;
    }

    &__icon {
        margin-right: $gutter * .5;
        height: 18px;
        min-width: 25px;
    }

	&:disabled {
		cursor: not-allowed;
    }
    
	&--fullwidth {
		width: 100%;
        padding: 0;
        margin: 0;
    }
    
    &--lrg {
        height: 50px;
        padding: 0 ($gutter * 1.5);
        @include resp-font-size(16, 18, 18, 20);

        #{$b}__icon {
            height: 25px;
            margin-right: $gutter * .75;
        }
    }
}

@function set-bg-hover($name, $value) {
    @if (lightness($value) < 10) {
        @return lighten(color($name), 15%); // Lighter backgorund, return dark color
    } @else {
        @return darken(color($name), 8%); // Darker background, return light color
    }
}

@each $name, $value in $colors {
    .btn--#{$name} {
        background: color($name);
        color: set-text-color($value);
        
        &:hover {
            background: set-bg-hover($name, $value);
        }

        @if ($name == 'primary') {
            &:focus,
            &:-moz-focusring {
                outline-color: color('black');
            }
        }
    }
}